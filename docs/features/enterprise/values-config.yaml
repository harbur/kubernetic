authenticate:
    idp:
      clientID: CLIENT_ID_OF_YOUR_IDENTITY_PROVIDER
      clientSecret: CLIENT_SECRET_OF_YOUR_IDENTITY_PROVIDER
      provider: YOUR_IDENTITY_PROVIDED #eg: google
  config:
    cookieSecret: YOUR_COOKIE_SECRET
    existingConfig: pomerium
    generateTLS: true
    rootDomain: pro.demo-pomerium.io ## complete with your root domain
    administrators: "demo-pomerium@harbur.io" ## complete with your administrator
    sharedSecret: YOUR_SHARED_SECRET
    JWTClaimsHeaders:
      - email 
      - groups
      - user
    jwt_claims_headers:
      - email
      - groups
      - user
    policy:  ## Policy contains route specific settings, and access control details. If you are configuring via POLICY environment variable, just the contents of the policy needs to be passed. If you are configuring via file, the policy should be present under the policy key.
      - from: https://httpbin.pro.harbur.io
        to: https://httpbin.org
        pass_identity_headers: true
        JWTClaimsHeaders:
          - email
          - groups
          - user
        jwt_claims_headers:
          - email
          - groups
          - user
        allowed_domains:
          - harbur.io
      - from: http://demo.pro.harbur.io
        to: http://kubernetic-frontend.kubernetic-pro.svc.cluster.local
        pass_identity_headers: true
        allow_websockets: true
        allowed_domains:
          - harbur.io
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-buffer-size: 16k
    hosts:
      - "*.pro.harbur.io"
    enabled: false
    secretName: pro.harbur.io-tls